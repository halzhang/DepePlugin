/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.4/userguide/custom_plugins.html
 */

plugins {
    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
    `java-gradle-plugin`
    `maven-publish`
    signing
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use JUnit test framework for unit tests
    testImplementation("junit:junit:4.12")
}

gradlePlugin {
    // Define the plugin
    val depe by plugins.creating {
        id = "com.hqwx.plugin.depe"
        implementationClass = "com.hqwx.plugin.depe.HqwxDependPlugin"
    }
}

// Add a source set for the functional test suite
val functionalTestSourceSet = sourceSets.create("functionalTest") {
}

gradlePlugin.testSourceSets(functionalTestSourceSet)
configurations.getByName("functionalTestImplementation")
    .extendsFrom(configurations.getByName("testImplementation"))

// Add a task to run the functional tests
val functionalTest by tasks.creating(Test::class) {
    testClassesDirs = functionalTestSourceSet.output.classesDirs
    classpath = functionalTestSourceSet.runtimeClasspath
}

val check by tasks.getting(Task::class) {
    // Run the functional tests as part of `check`
    dependsOn(functionalTest)
}

//
//group = "com.hqwx.plugin"
//version = "0.0.1-SNAPSHOT"
//
//tasks.register<Jar>("sourcesJar") {
//    archiveClassifier.set("sources")
//    from(sourceSets.main.get().allJava)
//}
//
//publishing {
//    publications {
//        create<MavenPublication>("maven") {
//            groupId = "com.hqwx.plugin"
//            artifactId = "depe"
//            version = "0.0.1-SNAPSHOT"
//            from(components["java"])
//            artifact(tasks["sourcesJar"])
//        }
//    }
//
//    repositories {
//        maven {
//            credentials {
//                username = System.getProperty("NEXUS_USERNAME", "")
//                password = System.getProperty("NEXUS_PASSWORD", "")
//            }
//
//            val releaseUrl = uri(
//                System.getProperty(
//                    "RELEASE_REPOSITORY_URL",
//                    "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
//                )
//            )
//
//            val snapshotUrl = uri(
//                System.getProperty(
//                    "SNAPSHOT_REPOSITORY_URL",
//                    "https://oss.sonatype.org/content/repositories/snapshots/"
//                )
//            )
//
//            url = if (version.toString().contains("SNAPSHOT")) snapshotUrl else releaseUrl
//        }
//    }
}
